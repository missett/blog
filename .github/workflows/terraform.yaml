name: terraform

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: terraform
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node
      uses: actions/setup-node@v2
      with: 
        node-version: '14'

    - name: Test Lambdas
      working-directory: lambda
      # we shouldn't really be pulling in arbitrary shell scripts during the build process...
      run: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

        for lambda_dir in $(ls); do
          pushd $lambda_dir
          nvm install
          nvm use
          npm install --no-optional
          npm test
          popd
        done

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: '0.85.0'

    - name: Build 
      working-directory: static/src
      run: hugo --gc --minify --baseURL https://d3cvuhrgx7tzue.cloudfront.net/

    - name: Terraform Format
      working-directory: terraform
      run: terraform fmt -check

    - name: Terraform Init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      working-directory: terraform
      run: terraform init

    - name: Terraform Validate
      working-directory: terraform
      run: terraform validate -no-color

    - name: Terraform Plan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      if: github.event_name == 'pull_request'
      working-directory: terraform
      run: terraform plan -no-color

    - name: Terraform Apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      working-directory: terraform
      run: terraform apply -auto-approve

